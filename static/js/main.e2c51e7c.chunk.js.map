{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oTAEaA,EAAK,SAAAC,GAAK,OACnB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACrB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHVC,G,MAAS,SAACR,GAEnB,OADAS,QAAQC,IAAIV,GAER,qBAAKC,UAAU,aAAf,SAEID,EAAMW,SAASC,KAAI,SAAAR,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCPtBQ,G,MAAU,SAAC,GACvB,IADwBC,EACzB,EADyBA,YAAYC,EACrC,EADqCA,aAEjC,OAEA,uBAAOd,UAAU,SAASe,KAAK,SAASC,YAAaH,EAAaI,SAAWH,MCyClEI,G,wDAzCb,aACC,IAAD,8BACE,gBAgBFJ,aAAc,SAACK,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAhBpC,EAAKC,MAAM,CACTd,SAAS,GACTW,YAAY,IAJhB,E,qDAQA,WACC,IAAD,OACEI,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACV,SAASmB,S,oBAQxC,WAEE,MAA6BC,KAAKN,MAA3Bd,EAAP,EAAOA,SAASW,EAAhB,EAAgBA,YACVU,EAAiBrB,EAASsB,QAAO,SAAA7B,GAAO,OAC5CA,EAAQE,KAAK4B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAKjC,UAAU,MAAf,UACA,cAAC,EAAD,CAAWa,YAAY,gBAAgBC,aAAcgB,KAAKhB,eAE1D,cAAC,EAAD,CAAUJ,SAAUqB,W,GAjCRI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.e2c51e7c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card=props=>(\r\n    <div className='card-container'>\r\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set1&size=180x180`}/>\r\n     <h2>{props.monster.name}</h2>\r\n     <p>{props.monster.email}</p>\r\n    </div>\r\n   \r\n);","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.styles.css';\r\nexport const CardList=(props)=>{\r\n    console.log(props);\r\n    return (\r\n        <div className='card-list '>\r\n        {\r\n            props.monsters.map(monster=>(\r\n                <Card key={monster.id} monster={monster}/>\r\n            ))\r\n        }\r\n       \r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport './search-box.styles.css';\r\nexport const SearchBox=({placeHolder,handleChange})=>\r\n{\r\n    return (\r\n \r\n    <input className='search' type=\"search\" placeholder={placeHolder} onChange={ handleChange }/>\r\n \r\n    );\r\n   \r\n};","import React ,{Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component'\nimport './App.css';\n\nclass App extends Component {\n  constructor()\n  {\n    super();\n    this.state={\n      monsters:[],\n      searchField:''\n    }\n    //this.handleChange=this.handleChange.bind(this); // if the function is regular then we need to set 'this' manullay of the function\n  }\n  componentDidMount()\n  {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res=>res.json())\n    .then(users=> this.setState({monsters:users}));\n  }\n  // handleChange(e){\n  //   this.setState({searchField:e.target.value});\n  // }\n  handleChange= (e) =>{\n    this.setState({searchField:e.target.value}); // this automatically point to app component b/s it is declared in the arrow function\n  }\n  render()\n  {\n    const {monsters,searchField}=this.state;\n    const filteredMonsters=monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      \n      );\n    return (\n      <div className=\"App\">\n      <SearchBox placeHolder=\"Search Master\" handleChange={this.handleChange}/>\n     \n      <CardList monsters={filteredMonsters}></CardList>\n     \n      </div>\n  \n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n , \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}